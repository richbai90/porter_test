# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "disk_size" {
  type    = string
  default = "100000"
}

variable "domain" {
  type    = string
  default = ""
}

variable "password" {
  type    = string
  default = "admindebian"
}

variable "user" {
  type    = string
  default = "admindebian"
}

variable "qemu_args" {
  type = list(list(string))
  default = [["-display", "none"], ["-accel", "kvm"], ["-machine", "type=pc"]]
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "qemu" "rke-server" {
  accelerator       = "kvm"
  boot_command      = [ 
    "<esc><wait><wait>",
    "auto ", 
    "url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/./preseed.cfg ", 
    "debian-installer=en_US locale=en_US keymap=us ",
    "netcfg/get_hostname={{ .Name }} ",
    "netcfg/get_domain=${var.domain} ",
    "fb=false debconf/frontend=noninteractive ",
    "passwd/user-fullname=${var.user} ",
    "passwd/user-password=${var.password} ",
    "passwd/user-password-again=${var.password} ",
    "passwd/username=${var.user} ",
    "<enter>"]
  boot_wait         = "2s"
  disk_size         = "${var.disk_size}"
  format            = "qcow2"
  http_directory    = "http"
  iso_checksum      = "fab0b6d2ea4fa4fb14100225fcb2988b94a8e391f273b4bfaed6314dff124a42"
  iso_url           = "https://cdimage.debian.org/debian-cd/current/amd64/iso-dvd/debian-11.3.0-amd64-DVD-1.iso"
  shutdown_command  = "echo '${var.password}'| sudo -S shutdown -h now"
  ssh_password      = "${var.password}"
  ssh_username      = "${var.user}"
  ssh_wait_timeout  = "60m"
  qemuargs          = var.qemu_args
  memory            = 2048
  cpus              = 2
}

source "qemu" "rke-agent1" {
  accelerator       = "kvm"
  boot_command      = [ 
    "<esc><wait><wait>",
    "auto ", 
    "url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/./preseed.cfg ", 
    "debian-installer=en_US locale=en_US keymap=us ",
    "netcfg/get_hostname={{ .Name }} ",
    "netcfg/get_domain=${var.domain} ",
    "fb=false debconf/frontend=noninteractive ",
    "passwd/user-fullname=${var.user} ",
    "passwd/user-password=${var.password} ",
    "passwd/user-password-again=${var.password} ",
    "passwd/username=${var.user} ",
    "<enter>"]
  boot_wait         = "2s"
  disk_size         = "${var.disk_size}"
  format            = "qcow2"
  http_directory    = "http"
  iso_checksum      = "fab0b6d2ea4fa4fb14100225fcb2988b94a8e391f273b4bfaed6314dff124a42"
  iso_url           = "https://cdimage.debian.org/debian-cd/current/amd64/iso-dvd/debian-11.3.0-amd64-DVD-1.iso"
  shutdown_command  = "echo '${var.password}'|sudo -S shutdown -h now"
  ssh_password      = "${var.password}"
  ssh_username      = "${var.user}"
  ssh_wait_timeout  = "60m"
  qemuargs          = var.qemu_args
  memory            = 2048
  cpus              = 2
}

source "qemu" "rke-agent2" {
  accelerator       = "kvm"
  boot_command      = [ 
    "<esc><wait><wait>",
    "auto ", 
    "url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/./preseed.cfg ", 
    "debian-installer=en_US locale=en_US keymap=us ",
    "netcfg/get_hostname={{ .Name }} ",
    "netcfg/get_domain=${var.domain} ",
    "fb=false debconf/frontend=noninteractive ",
    "passwd/user-fullname=${var.user} ",
    "passwd/user-password=${var.password} ",
    "passwd/user-password-again=${var.password} ",
    "passwd/username=${var.user} ",
    "<enter>"]
  boot_wait         = "2s"
  disk_size         = "${var.disk_size}"
  format            = "qcow2"
  http_directory    = "http"
  iso_checksum      = "fab0b6d2ea4fa4fb14100225fcb2988b94a8e391f273b4bfaed6314dff124a42"
  iso_url           = "https://cdimage.debian.org/debian-cd/current/amd64/iso-dvd/debian-11.3.0-amd64-DVD-1.iso"
  shutdown_command  = "echo '${var.password}'|sudo -S shutdown -h now"
  ssh_password      = "${var.password}"
  ssh_username      = "${var.user}"
  ssh_wait_timeout  = "60m"
  qemuargs          = var.qemu_args
  memory            = 2048
  cpus              = 2
}

source "qemu" "rke-agent3" {
  accelerator       = "kvm"
  boot_command      = [ 
    "<esc><wait><wait>",
    "auto ", 
    "url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/./preseed.cfg ", 
    "debian-installer=en_US locale=en_US keymap=us ",
    "netcfg/get_hostname={{ .Name }} ",
    "netcfg/get_domain=${var.domain} ",
    "fb=false debconf/frontend=noninteractive ",
    "passwd/user-fullname=${var.user} ",
    "passwd/user-password=${var.password} ",
    "passwd/user-password-again=${var.password} ",
    "passwd/username=${var.user} ",
    "<enter>"]
  boot_wait         = "2s"
  disk_size         = "${var.disk_size}"
  format            = "qcow2"
  http_directory    = "http"
  iso_checksum      = "fab0b6d2ea4fa4fb14100225fcb2988b94a8e391f273b4bfaed6314dff124a42"
  iso_url           = "https://cdimage.debian.org/debian-cd/current/amd64/iso-dvd/debian-11.3.0-amd64-DVD-1.iso"
  shutdown_command  = "echo '${var.password}'|sudo -S shutdown -h now"
  ssh_password      = "${var.password}"
  ssh_username      = "${var.user}"
  ssh_wait_timeout  = "60m"
  qemuargs          = var.qemu_args
  memory            = 2048
  cpus              = 2
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.qemu.rke-server"]

  provisioner "shell" {
    execute_command  = "echo '${var.password}' | {{ .Vars }} sudo -E -S bash '{{ .Path }}'"
    scripts          = ["scripts/update.sh", "scripts/packages.sh", "scripts/postconfig.sh", "scripts/cleanup.sh"]
    environment_vars = ["SERVER=1"]
  }

}

build {
  sources = ["source.qemu.rke-agent1"]

  provisioner "shell" {
    execute_command  = "echo '${var.password}' | {{ .Vars }} sudo -E -S bash '{{ .Path }}'"
    scripts          = ["scripts/update.sh", "scripts/packages.sh", "scripts/postconfig.sh", "scripts/cleanup.sh"]
  }
}

build {
  sources = ["source.qemu.rke-agent2"]

  provisioner "shell" {
    execute_command  = "echo '${var.password}' | {{ .Vars }} sudo -E -S bash '{{ .Path }}'"
    scripts          = ["scripts/update.sh", "scripts/packages.sh", "scripts/postconfig.sh", "scripts/cleanup.sh"]
  }
}

build {
  sources = ["source.qemu.rke-agent3"]

  provisioner "shell" {
    execute_command  = "echo '${var.password}' | {{ .Vars }} sudo -E -S bash '{{ .Path }}'"
    scripts          = ["scripts/update.sh", "scripts/packages.sh", "scripts/postconfig.sh", "scripts/cleanup.sh"]
  }
}
